/*	-------------------------------------
	:: Kitchen Sink (CMS Content)
	---------------------------------- */
	$kitchensink_space_underneath: 5.5rem;
	$kitchensink_space_underneath_mobile: 5.5vw;

	.kitchensink {

		/* Paragraph Overrides */
		p {
			margin-bottom: $kitchensink_space_underneath;

			@include max-width(650px) {
				margin-bottom: $kitchensink_space_underneath_mobile;
			}

			strong {  }

			&.mbn { margin-bottom: 1rem !important; }

			a:not(.button) {
				background-position: 0% 92.5%, 100% 92.5%, 0% 92.5% !important;

				@include min-width(500px) {
					background-position: 0% 90%, 100% 90%, 0% 90% !important;
				}

				@include min-width(800px) {
					background-position: 0% 87.5%, 100% 87.5%, 0% 87.5% !important;
				}

				@include min-width(1200px) {
					background-position: 0% 85%, 100% 85%, 0% 85% !important;
				}

				&:hover,
				&:active {
					color: $cta-active;
					@include add_alt_smart_underline();
					background-image: linear-gradient($cta-active, $cta-active), linear-gradient($cta-active, $cta-active), linear-gradient($cta-active, $cta-active);
				}
			}

			/**
			* TODO: rework to use real smallcaps (if the font has them)
			* real smallcaps have to be lowercase and will use the same font-size (these are Faux)
			*/
			&.smallcaps {
				font: normal 900 1.4rem / 1.4;
				letter-spacing: 2px;
				text-transform: uppercase;
				color: $cta;
			}

			&.raised-cap::first-letter {
				font: normal 900 7.7rem / 0.675 inherit;
				color: black;
				text-transform: uppercase;
				float: left;
				margin: 1rem 0 0 -0.185em;
				padding: 0 12px 0 6px;

				@include min-width(801px) {
					font-size: 7.8rem;
				}
			}

			& + img {
				margin-top: 0;
			}

			&:last-of-type {
				margin-bottom: 0;

				& + * {
					margin-top: 3.4rem;
				}
			}
		}

		strong {
			color: $body-dark;
			font-weight: 600;
		}

		/* Headline Overrides */
		h1,
		.h1,
		.head {
			margin-bottom: 2.8rem;
		}

		h2,
		.h2,
		.subhead {
			margin-bottom: 3.2rem;
		}

		h3, .h3 {
			margin-bottom: 0.5em;
		}

		h4, .h4 {
			line-height: 3.1rem;
			margin-bottom: 1.7rem;
		}

		h5, .h5 {
			margin-bottom: 3.6rem;
		}

		h6, .h6 {

		}

		/* Unsorted Lists Overrides */
		ul, ol {
			// @include unstyled(); --- We need bullets and numbers by default.
			padding: 0;
			margin: 0 0 6rem 32px;
			width: calc(100% - 32px);

			li {
				font-size: 1.7rem;
				color: $body;
				line-height: 1.6;
				position: relative;
				margin-bottom: 1.6rem;
			}

			&.aligncenter {
				margin: 0 auto;
				text-align: left;
			}

			&.no-indent {
				margin-left: 0 !important;
			}

			&.checked-list {
				margin-left: 0;
				width: 100%;
			}
		}

		/* Rule Overrides */
		hr {

		}

		/* Image Overrides */
		img {
			display: block;
			margin: 0 auto $kitchensink_space_underneath auto;
			transition: all 200ms ease 0ms;

			@include max-width(650px) {
				margin: 0 auto $kitchensink_space_underneath_mobile auto;
			}

			&.aligncenter {
				display: block;
			}

			&.alignleft,
			&.alignright {
				display: block;
				float: none;
				margin: 0 auto 20px;

				@include min-width(800px) {
					display: table;
					margin: 10px 20px 20px 0;
				}
			}

				@include min-width(800px) {
					&.alignleft  { float: left;  }
					&.alignright { float: right; }
				}
		}

			& > .zoomable-image:last-of-type {
				img {
					margin-bottom: 0;
				}

				& + * {
					margin-top: $kitchensink_space_underneath;

					@include max-width(650px) {
						margin-top: $kitchensink_space_underneath_mobile;
					}
				}
			}

			& > img:last-of-type {
				margin-bottom: 0;

				& + * {
					margin-top: $kitchensink_space_underneath;

					@include max-width(650px) {
						margin-top: $kitchensink_space_underneath_mobile;
					}
				}
			}

			figure {
				margin: 0 auto $kitchensink_space_underneath auto;
				width: 100% !important;

				@include max-width(650px) {
					margin: 0 auto $kitchensink_space_underneath_mobile auto;
				}

				img {
					margin: 0 auto;
				}

				figcaption {
					font: italic 400 1.7rem / 1.4 $body-font !important;
					color: $body-dark;
					margin: 2rem auto;

					@include min-width(1201px) {
						position: absolute;
						width: 210px;
						right: calc(50vw - 350px);
						transform: translate(235px, -90px);
						float: right;
					}
				}
			}
				& > figure:last-of-type {
					margin-bottom: 0;

					& + * {
						margin-top: $kitchensink_space_underneath;

						@include max-width(650px) {
							margin-top: $kitchensink_space_underneath_mobile;
						}
					}
				}

		/* Quote Overrides */
		blockquote {

		}
			q {

			}


		.video-wrapper {
			margin-bottom: $kitchensink_space_underneath;

			@include max-width(650px) {
				margin-bottom: $kitchensink_space_underneath_mobile;
			}
		}

		.hashtag {
			background: $gray;
			padding: 6px;
			display: block;
			float: left;
			margin: 0 4px 4px 0;
			color: white;
		}

		/* Pubs */
		.two-col-pub {
			column-gap: 2.25em;

			&[min-width~="500px"] {
				column-count: 2;
			}

			p {
				margin: 0;
			}
		}

		.three-col-pub {
			column-gap: 36px;

			p {
				margin: 0;
			}

			&[min-width~="650px"] {
				column-count: 2;
			}

			&[min-width~="1000px"] {
				column-count: 3;
			}

			h3, .h3 {
				margin-bottom: 1.2rem;
			}
		}

		.progressive-image {
			background: $body-light;
		}
	}

	.dark .kitchensink {

		p {
			color: rgba(#fff, 0.7);
		}

		a {
			text-shadow: none !important;
			color: white;

			&::after {
				display: none;
			}

			&:not(.button) {
				&:hover,
				&:active,
				&:focus {
					color: white;
					background-image: linear-gradient(rgba(white, 0.25), rgba(white, 0.25)),linear-gradient(rgba(white, 0.25), rgba(white, 0.25)),linear-gradient(rgba(white, 0.25), rgba(white, 0.25));
				}
			}

			&:hover,
			&:active {
				&:not(.button) {
					@include add_smart_underline();

					& > span {
						@include add_smart_underline();
					}
				}
			}
		}

		h1, .h1,
		h2, .h2,
		h3, .h3,
		h4, .h4,
		h5, .h5,
		h6, .h6 {
			color: white;
		}

		h6, .h6 {
			background: rgba($body, 0.4);
		}
	}


	.light .kitchensink {

		p {
			color: rgba($body-dark, 0.5);
		}

		a {
			text-shadow: none !important;

			&:not(.button)::after {
				display: none;
			}
		}

		.h6, h6 {
			background: rgba(white, 0.5) !important;
			color: rgba($body, 0.9);
		}
	}
